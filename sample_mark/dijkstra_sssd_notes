
Shortest path from a single source to a single destination

Thoughts:

PreGraph: generic

LabeledGraph:
	LV: nat, or even unit?
	LE: nat
	LG: unit
	need a way to follow a path while adding up the edge labels
			 path_cost: path -> nat

GeneralGraph:
	need a soundness condition preventing negative edge weights (guaranteed by using nat)
	finite graph

Spec: 
	\exists mypath. path_ends g mypath src dst,
		\forall path. path_ends g path src dest -> 
			path_cost path <= past_cost mypath ->
				mypath = path

- the current path_prop 
	Definition path_prop (g: Gph) (P : Ensemble V)  (p: path) : Prop :=
  		P (fst p) /\ Forall (fun e => P (src g e) /\ P (dst g e)) (snd p).
  only comments on vertices

- the current good_path is built on it
	Definition good_path (g: Gph) (P : Ensemble V) : (path -> Prop) := 
		fun p => valid_path g p /\ 	path_prop g P p.
